server.port=8090
spring.mvc.view.prefix=/WEB-INF/jsp
spring.mvc.view.suffix=.jsp

spring.swagger2.enabled=true

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/spring_boot?useSSL=false&serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=123456
#spring.datasource.test-on-borrow=true
#spring.datasource.test-while-idle=true

# \u4E3A\u67D0\u4E2A\u5305\u76EE\u5F55\u4E0B \u8BBE\u7F6E\u65E5\u5FD7
logging.level.com.agan=debug


# 数据源配置
# 数据源 account
spring.datasource.druid.account.url=jdbc:mysql://localhost:3306/spring_boot?serverTimezone=GMT%2B8
spring.datasource.druid.account.username=root
spring.datasource.druid.account.password=123456
spring.datasource.druid.account.driver-class-name=com.mysql.cj.jdbc.Driver
#初始化连接大小:连接池建立时创建的初始化连接数
spring.datasource.druid.account.initial-size=5
#最小空闲连接数:连接池中最小的活跃连接数
spring.datasource.druid.account.min-idle=15
#最大连接数:连接池中最大的活跃连接数
spring.datasource.druid.account.max-active=60
spring.datasource.druid.account.validation-query=SELECT 1
#获取连接时检测：是否在获得连接后检测其可用性
spring.datasource.druid.account.test-on-borrow=true
#空闲时检测：是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.account.test-while-idle=true
#连接保持空闲而不被驱逐的最长时间
spring.datasource.druid.account.time-between-eviction-runs-millis=60000

#数据源 redpacket
spring.datasource.druid.redpacket.url=jdbc:mysql://localhost:3306/test?serverTimezone=GMT%2B8
spring.datasource.druid.redpacket.username=root
spring.datasource.druid.redpacket.password=123456
spring.datasource.druid.redpacket.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.redpacket.initial-size=5
spring.datasource.druid.redpacket.min-idle=15
spring.datasource.druid.redpacket.max-active=60
spring.datasource.druid.redpacket.validation-query=SELECT 1
spring.datasource.druid.redpacket.test-on-borrow=true
spring.datasource.druid.redpacket.test-while-idle=true
spring.datasource.druid.redpacket.time-between-eviction-runs-millis=60000


#数据源监控
spring.datasource.druid.use-global-data-source-stat=true
#配置druid显示监控统计信息
#开启Druid的监控平台 http://localhost:9090/druid
#1. StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=root
spring.datasource.druid.stat-view-servlet.login-password=123456
#spring.datasource.druid.stat-view-servlet.allow=
#spring.datasource.druid.stat-view-servlet.deny=

#2. WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
#spring.datasource.druid.web-stat-filter.session-stat-enable=
#spring.datasource.druid.web-stat-filter.session-stat-max-count=
#spring.datasource.druid.web-stat-filter.principal-session-name=
#spring.datasource.druid.web-stat-filter.principal-cookie-name=
#spring.datasource.druid.web-stat-filter.profile-enable=

#3. Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
#spring.datasource.druid.aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔


#Spring Boot2.1以上 默认禁用那种bean覆盖(作用 用于兼容低版本)
spring.main.allow-bean-definition-overriding=true